{"version":3,"sources":["components/ImgCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["ImgCard","props","className","alt","name","src","image","onClick","guessedPicture","id","Wrapper","children","Title","guesses","App","state","pictures","score","highScore","shuffle","includes","setState","push","temporaryValue","randomIndex","randomPictures","currentIndex","length","Math","floor","random","this","map","picture","key","Component","ReactDOM","render","document","getElementById"],"mappings":"4uFAaeA,MAVf,SAAiBC,GACb,OACI,yBAAKC,UAAU,QACjB,yBAAKA,UAAU,iBACb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,eAAeP,EAAMQ,U,MCE3EC,MANf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WACnBD,EAAMU,W,MCOIC,MATf,SAAeX,GACb,OAAQ,yBAAKC,UAAU,aACvB,wBAAIA,UAAU,aAAaD,EAAMU,UACjC,uBAAGT,UAAU,QAAb,+DACA,wBAAIA,UAAU,SACd,mG,OCDEW,G,MAAU,IA2ECC,E,2MAvEXC,MAAO,CACHC,WACAC,MAAO,EACPC,UAAW,G,EAOfV,eAAiB,SAAAC,GAGb,EAAKU,UACFN,EAAQO,SAASX,IAEb,EAAKM,MAAME,MAAQ,EAAKF,MAAMG,WAC9B,EAAKG,SAAS,CAACH,UAAW,EAAKH,MAAME,QAEzC,EAAKI,SAAS,CAACJ,MAAO,IACtBJ,EAAU,KAGV,EAAKQ,SAAS,CAACJ,MAAO,EAAKF,MAAME,MAAQ,IACzCJ,EAAQS,KAAKb,K,EAKpBU,QAAU,WAKF,IAJA,IAC0CI,EAAgBC,EADtDC,EAAiB,EAAKV,MAAMC,SAC5BU,EAAeD,EAAeE,OAG3B,IAAMD,GAGbF,EAAcI,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCH,EAAiBE,EAHjBC,GAAgB,GAIhBD,EAAeC,GAAgBD,EAAeD,GAC9CC,EAAeD,GAAeD,EAG9B,EAAKF,SAAS,CAACL,SAAUS,K,mFAvC7BM,KAAKV,SAAS,CAACL,e,+BA2CT,IAAD,OACL,OACI,kBAAC,EAAD,KACA,kBAAC,EAAD,qBACA,sCAAYe,KAAKhB,MAAME,OACvB,2CAAiBc,KAAKhB,MAAMG,WAC5B,yBAAKhB,UAAU,aACd6B,KAAKhB,MAAMC,SAASgB,KAAI,SAAAC,GACrB,OAAO,kBAAC,EAAD,CACP7B,KAAM6B,EAAQ7B,KACdE,MAAO2B,EAAQ3B,MACfG,GAAIwB,EAAQxB,GACZyB,IAAKD,EAAQxB,GACbD,eAAgB,EAAKA,0B,GAjEnB2B,aCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.02e32c8c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImgCard(props) {\r\n    return (\r\n        <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} onClick={() => props.guessedPicture(props.id)}/>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImgCard","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">\r\n    {props.children}\r\n    </div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return (<div className=\"jumbotron\">\r\n  <h1 className=\"display-4\">{props.children}</h1>\r\n  <p className=\"lead\">Clicky memory game!! Click on a different image every time.</p>\r\n  <hr className=\"my-4\"/>\r\n  <p>If you click on a repeated image, you lose! The game will restart.</p>\r\n</div>);\r\n}\r\n\r\nexport default Title;","import React, { Component } from \"react\";\r\nimport ImgCard from \"./components/ImgCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport pictures from \"./pictures.json\";\r\nimport \"./style.css\";\r\n\r\nlet guesses = [];\r\n\r\nclass App extends Component {\r\n\r\n    state ={\r\n        pictures,\r\n        score: 0,\r\n        highScore: 0\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.setState({pictures})\r\n    }\r\n\r\n    guessedPicture = id => {\r\n        // Filter this.state.friends for friends with an id not equal to the id being removed\r\n        // Set this.state.friends equal to the new friends array\r\n        this.shuffle();\r\n       if (guesses.includes(id)) {\r\n           //reset game\r\n           if (this.state.score > this.state.highScore) {\r\n               this.setState({highScore: this.state.score})\r\n            }\r\n           this.setState({score: 0})\r\n           guesses = []\r\n       } else {\r\n           //increment score\r\n           this.setState({score: this.state.score + 1})\r\n           guesses.push(id);\r\n       }\r\n        \r\n    };\r\n\r\n    shuffle = () => {\r\n            let randomPictures = this.state.pictures;\r\n            let currentIndex = randomPictures.length, temporaryValue, randomIndex;\r\n        \r\n            // While there remain elements to shuffle...\r\n            while (0 !== currentIndex) {\r\n        \r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n        \r\n            // And swap it with the current element.\r\n            temporaryValue = randomPictures[currentIndex];\r\n            randomPictures[currentIndex] = randomPictures[randomIndex];\r\n            randomPictures[randomIndex] = temporaryValue;\r\n            }\r\n        \r\n            this.setState({pictures: randomPictures})\r\n        }\r\n      \r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n            <Title>Memory Game!</Title>\r\n            <h2>Score: {this.state.score}</h2>\r\n            <h2>High score: {this.state.highScore}</h2>\r\n            <div className=\"container\">\r\n            {this.state.pictures.map(picture => {\r\n                return <ImgCard \r\n                name={picture.name} \r\n                image={picture.image} \r\n                id={picture.id}\r\n                key={picture.id}\r\n                guessedPicture={this.guessedPicture}/>\r\n            })}\r\n            </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}